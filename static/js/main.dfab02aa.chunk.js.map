{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["App","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","counter","r","$chooseId","$","$chooseId2","logo","click","console","log","html","hide","show","css","concat","react_default","a","createElement","className","src","alt","id","href","target","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"qSAiFeA,cA1Eb,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACZH,qFAIN,IAAIO,EAAU,EACVC,EAAI,EACJC,EAAYC,IAAE,cACdC,EAAaD,IAAE,eACfE,EAAOF,IAAE,aAAaG,MAAM,WAC9BN,GAAW,EACXO,QAAQC,IAAI,yDAAwDR,GACrD,IAAZA,IACFE,EAAUO,KAAK,kCACfL,EAAWM,KAAK,OAEJ,IAAZV,GACDG,IAAE,cAAcM,KAAK,qEAET,IAAXT,GACDI,EAAWO,KAAK,KAAM,WACpBR,IAAEP,MAAMa,KAAK,6DAGF,KAAZT,IAAgBI,EAAWK,KAAK,4CAA6CP,EAAUQ,KAAK,MACzFT,GAAKD,EAAU,KAAIO,QAAQC,IAAI,qBAAoBP,GAAIA,GAAM,KAC7DD,GAAW,KACbO,QAAQC,IAAI,wBACZL,IAAEP,MAAMgB,IAAI,YAAZ,0BAAAC,OAAkDZ,EAAlD,cAECD,EAAS,KACZG,IAAE,aAAaO,KAAK,IAAM,WACxBP,IAAE,aAAaQ,KAAK,OAEtBJ,QAAQC,IAAI,oBAAkBH,GAC1BL,EAAS,GAAKA,EAAU,IAC1BO,QAAQC,IAAI,8GAMhB,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKb,IAAMY,UAAU,WAAWE,IAAI,SACzCL,EAAAC,EAAAC,cAAA,SACCF,EAAAC,EAAAC,cAAA,WAASI,GAAG,aAAZ,iCADD,IACiEN,EAAAC,EAAAC,cAAA,WADjE,KACyEF,EAAAC,EAAAC,cAAA,KAAGI,GAAG,cAAN,2DADzE,KAGAN,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,eAQAT,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,QAAMI,GAAG,cAAT,0BADA,IACoDN,EAAAC,EAAAC,cAAA,WACpDF,EAAAC,EAAAC,cAAA,QAAMI,GAAG,aAAT,+DAGFN,EAAAC,EAAAC,cAAA,4EA/DUQ,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.dfab02aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import { findDOMNode } from ‘react-dom’;\nimport $ from 'jquery';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    var counter = 0;\n    var r = 5;\n    var $chooseId = $('#choose-id');\n    var $chooseId2 = $('#choose-id2');\n    var logo = $('.App-logo').click(function(){\n      counter += 1;\n      console.log(\"This is how many times you've clicked the logo --->\" + counter);\n      if(counter === 1){\n       $chooseId.html(\"<i>Oooooh, that looks nice</i>\");\n       $chooseId2.hide(1500);\n    }\n    if(counter === 3) {\n      $('#choose-id').html(\"<strong>Oh, <i>woow</i>, I think you're on to something.</strong>\")\n    }\n    if(counter ===7) {\n      $chooseId2.show(2800, function(){\n        $(this).html('<h3> I feel something special, is about to happen.</h3>');\n      })\n    }\n    if(counter === 10){$chooseId2.html('<h3>WELCOME TO THE <i>SPIN ZONE</i></h3>'); $chooseId.hide(2000);}\n      if (r && counter > 10){console.log('This is r ---> ' + r); r = r/1.2;}\n      if (counter >= 10) {\n        console.log(\"Here's you're reward\");\n        $(this).css('animation',`App-logo-spin infinite ${r}s linear`);\n      }\n      if(counter <10){\n      $('.App-logo').hide(1000, function(){\n        $('.App-logo').show(1000);\n      });\n      console.log('this is d --->', logo);\n      if (counter >5 && counter < 10) {\n        console.log('Ooooooo, you\"re pressing it quite a bit of times. You\"re a curious one');\n      }\n    }\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n           <spinnys id='play-here'>PLAY HERE FOR EXCITING TIMES,</spinnys> <br />  <i id='spin-class'>and please don't pay attention to the nonsense above...</i>.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <p>\n          <span id='choose-id2'>IF YOU REALLY WANT TO,</span> <br />\n          <span id='choose-id'>PROVE IT BY CLICKING ON THE SPINNY TO MAKE IT SPIN FASTER</span>\n          </p> \n        </header>\n        <script>\n        var s = $()\n        console.log('This is s ---->' + s);\n        </script>\n      </div>\n     \n    );\n  }\n  \n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}